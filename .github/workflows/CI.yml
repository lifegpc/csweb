# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  flake8:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check Out
        uses: actions/checkout@v2

      - name: Install flake8
        run: pip3 install --upgrade flake8

      - name: Check Code
        run: python3 -m flake8

  closure-compiler:
    env:
      PYTHONUNBUFFERED: x
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
      - name: Check Out
        uses: actions/checkout@v2

      - name: Download Closure Compiler
        run: curl -L "https://repo1.maven.org/maven2/com/google/javascript/closure-compiler/v20210601/closure-compiler-v20210601.jar" -o compiler.jar

      - name: Install node modules
        run: npm i

      - name: Compile
        run: ./compile.sh
      
      - name: Package Output JS Files
        run: 7z -mx9 a js.7z js/*
      
      - name: Upload Output File
        uses: actions/upload-artifact@v2
        with:
          name: js-file
          path: ./js.7z

  test:
    env:
      PYTHONUNBUFFERED: x
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    needs: closure-compiler
    steps:
      - name: Check Out
        uses: actions/checkout@v2

      - name: Download JS File
        uses: actions/download-artifact@v2
        with:
          name: js-file
      
      - name: Extract 7z File
        run: 7z x js.7z

      - name: Install Python Modules
        run: python3 -m pip install --upgrade requirements.txt

      - name: Run Tests
        run: python3 run_test.py
